#include <SPI.h>
#include <Wire.h>
#include "Adafruit_GFX.h"
#include "Adafruit_SSD1306.h"

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


const unsigned char lovejoy[] PROGMEM = {
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000011,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11000001,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B10000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00000000,B01000011,B10000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B11000010,B00000000,B01000001,B10011100,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01100000,B01111110,B00000000,B00100011,B10000110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000111,B11000001,B10100011,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00000100,B01100110,B00100000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000000,B00000100,B00100100,B00100000,B00000010,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B11000011,B00000000,B00000110,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00001100,B00000110,B00011000,B01100000,B00001000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00101110,B00001100,B01101110,B00010000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011000,B01101100,B00111111,B00000100,B00100000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01001000,B11011111,B00000010,B01000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000001,B10001000,B01011111,B00000001,B10000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B01001000,B11111111,B00000010,B01000000,
  B00000000,B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B00000000,B00000000,B00001000,B00011000,B01101110,B00011000,B00010000,
  B00000000,B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00111000,B00000000,B00000000,B00000000,B00000000,B00001100,B00111110,B00010000,B00000000,
  B00000000,B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00110000,B00000101,B10000000,B10000000,B00000100,
  B00000000,B00000111,B00000000,B00111111,B00111100,B00111000,B11111000,B00111000,B01111110,B00111100,B00011100,B00100000,B00000100,B11000011,B00000000,B00000010,
  B00000000,B00000111,B00000000,B01111111,B10011100,B00111001,B11111100,B00111000,B11111111,B10011100,B00111100,B01000000,B00000100,B00111000,B00100000,B00000000,
  B00000000,B00000111,B00000000,B11110011,B10011110,B01111011,B11001110,B00111001,B11100011,B11011110,B00111000,B00000000,B00000100,B01100110,B00100000,B00000000,
  B00000000,B00000111,B00000000,B11100001,B11001110,B11110011,B10000111,B00111001,B11000001,B11001110,B01111000,B01000000,B00001110,B00000000,B01110000,B00000010,
  B00000000,B00000111,B00000000,B11100001,B11001110,B11110011,B11111111,B00111001,B11000001,B11001111,B01110000,B01100000,B01110010,B00000000,B00111110,B00000110,
  B00000000,B00000111,B00000000,B11100001,B11001111,B11100011,B10000000,B00111001,B11000001,B11000111,B11100000,B00000000,B00000010,B00000000,B00000000,B00000000,
  B00000000,B00000111,B11111100,B11110011,B11001111,B11100011,B10001110,B00111001,B11100011,B11000111,B11100000,B00000000,B00000000,B00000000,B10000000,B00000000,
  B00000000,B00000111,B11111100,B01111111,B10000111,B11000001,B11111110,B00111000,B11111111,B10000111,B11100000,B00000000,B00000000,B00000000,B11100000,B00000000,
  B00000000,B00000111,B11111100,B00111111,B00000111,B11000000,B11111100,B00111000,B01111110,B00000011,B11000000,B00000000,B00000001,B00000001,B11100000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B11111000,B00000000,B00000111,B11000000,B00000000,B00000000,B10000000,B11000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B11111000,B00000000,B00011111,B10000000,B00000000,B00000000,B11000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000011,B11110000,B00000000,B00111111,B00000000,B00000000,B00000000,B00100100,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00011000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01110000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000111,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01110000,B01110000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000111,B00011101,B11100011,B10001111,B00111111,B00000110,B00000001,B11111110,B01110000,B11111100,B00011011,B11000001,B11111000,B00000000,B00000000,
  B00000000,B00000111,B00011111,B11110011,B10001110,B00111111,B10000110,B11110001,B11111110,B00000001,B11111111,B00011111,B11100011,B11111100,B00000000,B00000000,
  B00000000,B00000111,B00011111,B11110001,B10001110,B01110001,B11000111,B11111001,B11111110,B00000011,B11000111,B10011111,B11110011,B10001110,B00000000,B00000000,
  B00000000,B00000111,B00011110,B01110001,B10001110,B01100000,B11000111,B11111100,B01110000,B01110011,B10000011,B10011110,B11110011,B11000000,B00000000,B00000000,
  B00000000,B00000111,B00011100,B01110001,B11011100,B11111111,B11100111,B00011100,B01110000,B01110011,B10000011,B10011100,B01110001,B11111110,B00000000,B00000000,
  B00000000,B00000111,B00011100,B01110001,B11011100,B11111111,B11100111,B00011100,B01110000,B01110011,B10000011,B10011100,B01110000,B01111110,B00000000,B00000000,
  B00000000,B00000111,B00011100,B01110000,B11111000,B11110000,B00000111,B00011100,B01110000,B01110011,B11000111,B10011100,B01110011,B00000110,B00000000,B00000000,
  B00000000,B00000111,B00011100,B01110000,B01110000,B01110001,B11000111,B00011100,B01111110,B01110001,B11111111,B00011100,B01110001,B11111110,B00000000,B00000000,
  B00000000,B00000111,B00011100,B01110000,B00110000,B00111111,B11000111,B00011100,B00111110,B01110000,B11111100,B00011100,B01110000,B11111100,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00011111,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,
  B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000 
};



void setup() {
  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  Serial.println("Here we go.");
  // Show initial display buffer contents on the screen --
  // the library initializes this with an Adafruit splash screen.
  display.display();
  delay(2000); // Pause for 2 seconds

  // Clear the buffer
  display.clearDisplay();

  // Draw a single pixel in white
  display.drawPixel(10, 10, WHITE);

  // Show the display buffer on the screen. You MUST call display() after
  // drawing commands to make them visible on screen!
  display.display();
  delay(2000);
  // display.display() is NOT necessary after every single drawing command,
  // unless that's what you want...rather, you can batch up a bunch of
  // drawing operations and then update the screen all at once by calling
  // display.display(). These examples demonstrate both approaches...

  testdrawbitmap();    // Draw a small bitmap image

  // Invert and restore display, pausing in-between
  display.invertDisplay(true);
  delay(1000);
  display.invertDisplay(false);
  delay(1000);
}

void loop() {
}


void testdrawbitmap(void) {
  display.clearDisplay();

  display.drawBitmap(0, 0, lovejoy, 128, 64, 1);
  display.display();
  delay(1000);
}

